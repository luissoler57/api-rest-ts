import { compare, hash } from 'bcryptjs'

/**
 * It takes a string, hashes it, and returns the hashed string
 * @param {string} password - The password to be encrypted
 * @returns A Promise
 */
export const encrypt = async (password: string) => {
  return await hash(password, 10)
}

/**
 * It takes a password and a passwordHash and returns a boolean value
 * @param {string} password - The password that the user entered
 * @param {string} passwordHash - The password hash that was generated by the hash function.
 * @returns A promise that resolves to a boolean.
 */
export const verified = async (password: string, passwordHash: string) => {
  return await compare(password, passwordHash)
}
